
package edu.unitec.matrox;

import java_cup.runtime.*;

parser code {:
    public Parser(java.io.Reader input) {
        super(new Lexer(input));
    }
:}

/* Types */
terminal INTEGER, CHAR, BOOLEAN, DOUBLE, STRING;

/* Boolean types */
terminal TRUE, FALSE;

/* Flow control structures */
terminal IF, ELSE, WHILE, FOR, SWITCH, CASE, BREAK, END;

/* Functions */
terminal FUNCTION, RETURN, VOID;

/* I/O */
terminal WRITE, READ;

/* Comma symbol */
terminal COMMA;

/* Arithmetic operators */
terminal ADD, MIN, MUL, DIV;

/* Grouping symbols */
terminal LPAR, RPAR, LBRACK, RBRACK;

/* Relationship operators */
terminal GREATEREQ, LESSEQ, GREATER, LESS, NEQ, EQU;

/* Logic operators */
terminal NOT, OR, AND;

/* Assignment operator */
terminal ASSIGN;

/* Values */
terminal String IDENTIFIER;
terminal Integer INTNUMBER;
terminal Double DOUBLENUMBER;
terminal Character CHARCONTENT;
terminal String STRINGCONTENT;

/* Non terminals */
non terminal exp;

/* Precedences */
precedence left ADD, MIN;
precedence left MUL, DIV;

exp ::= exp ADD         {: System.out.println("Hola"); :}
    | exp FUNCTION      {: System.out.println("Funci√≥n"); :}
    | exp INTEGER       {: System.out.println("Entero"); :}
    | /* Lambda */
;